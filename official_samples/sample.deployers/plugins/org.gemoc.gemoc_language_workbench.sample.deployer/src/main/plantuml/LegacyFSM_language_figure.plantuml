@startuml
hide stereotype  
skinparam class {
	BackgroundColor White
	ArrowColor Black
	BorderColor Black
}

namespace fsm.ecore <<Frame>>  {
  class FSM {
    name : String
    initialState : State
    finalState : State
  }
  class State{
    name : String
    incommingTransition : Transition
  }
	class Transition{
		input : String
		target : State
	}
	FSM *-- State : ownedStates
	State *-- Transition : outgoingTransitions
}

namespace fsm.melange <<Cloud>> #PaleGreen-white {
	namespace fsm  #white {
	  class FSM {
	    name : String
	    initialState : State
	    finalState : State
	  }
	  class State{
	    name : String
	    incommingTransition : Transition
	  }
		class Transition{
			input : String
			target : State
		}
		FSM *-- State : ownedStates
		State *-- Transition : outgoingTransitions
	}
}

namespace fsm.k3dsa   {
    class FSMAspect << (@,#FF7700) Aspect >>{
	    currentState : State
	    run()
	}
	class StateAspect << (@,#FF7700) Aspect >>{
	    step()
	}
	class TransitionAspect << (@,#FF7700) Aspect >>{
	    fire()
	}
}

fsm.melange.fsm.FSM .. fsm.k3dsa.FSMAspect  : <
fsm.melange.fsm.State .. fsm.k3dsa.StateAspect  : <
fsm.melange.fsm.Transition .. fsm.k3dsa.TransitionAspect  : <

namespace xsfsm.melange <<Cloud>> #PaleGreen-white {
	namespace fsm  #LightGray-white {
	  class FSM {
	    name : String
	    initialState : State
	    finalState : State
	    currentState : State
	    run()
	  }
	  class State{
	    name : String
	    incommingTransition : Transition
	    step()
	  }
	  class Transition{
	    input : String
	    target : State
	    fire()
	  }
	  FSM *-- State : ownedStates
	  State *-- Transition : outgoingTransitions
	}
}

fsm.melange --> fsm.ecore : syntax (legacy)
fsm.melange <-- xsfsm.melange : inherits
xsfsm.melange *-- fsm.k3dsa : with
@enduml